{"ast":null,"code":"var _jsxFileName = \"/Users/David/Desktop/bootcamp2/Project-3/client/src/pages/SavedProperties.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { GET_ME } from '../utils/queries';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { REMOVE_PROPERTY, SAVE_PROPERTY } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport { getSavedPropertyIds, removePropertyIds } from '../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SavedProperties = () => {\n  _s();\n\n  const {\n    loading,\n    data\n  } = useQuery(GET_ME);\n  const [removeProperty] = useMutation(REMOVE_PROPERTY);\n  const userData = (data === null || data === void 0 ? void 0 : data.me) || []; //???????????\n  // const [savedPropertyIds, setSavedPropertyIds] = useState(getSavedPropertyIds());\n  // const [ saveProperty] = useMutation(SAVE_PROPERTY)\n\n  console.log(userData, \"SSSSSSSSSS\"); // create function that accepts the propertie's mongo _id value as param and deletes the property from the database\n\n  const handleDeleteProperty = async listing_id => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) return false;\n\n    try {\n      await removeProperty({\n        // variables: {listing_id}\n        variables: {\n          listing_id\n        }\n      }); //only triggers if the removeProperty mutation is successful\n\n      removePropertyIds(listing_id);\n    } catch (e) {\n      console.log(e);\n    }\n  }; // if data isn't here yet, say so\n\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"LOADING RESULTS...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this); // return (\n  //   <>\n  //     <div fluid className='text-light bg-dark'>\n  //       <Container>\n  //         <h1>Viewing saved properties</h1>\n  //       </Container>\n  //     </div>\n  //     <Container>\n  //       <h2>\n  //         {userData.savedProperties.length\n  //           ? `Viewing ${userData.savedProperties.length} saved ${userData.savedProperties.length === 1 ? 'properties' : 'properties'}:`\n  //           : 'You have no saved properties!'}\n  //       </h2>\n  //       <div>\n  //         {userData.savedProperties.map((property) => {\n  //           return (\n  //             <Card key={property.listing_id} border='dark'>\n  //               {property.image ? <Card.Img src={property.image} alt={`The cover for ${property.title}`} variant='top' /> : null}\n  //               <Card.Body>\n  //                 <Card.Title>{property.title}</Card.Title>\n  //                 <p className='small'>Authors: {property.authors}</p>\n  //                 <Card.Text>{property.description}</Card.Text>\n  //                 <Button className='btn-block btn-danger' onClick={() => handleDeleteProperty(property.listing_id)}>\n  //                   Delete this Property!\n  //                 </Button>\n  //               </Card.Body>\n  //             </Card>\n  //           );\n  //         })}\n  //       </div>\n  //     </Container>\n  //   </>\n  // );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved properties\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.savedProperties.length ? `Viewing ${userData.savedProperties.length} saved ${userData.savedProperties.length === 1 ? 'properties' : 'properties'}:` : 'You have no saved properties!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: userData.savedProperties.map(property => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              children: [photo ? /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: photo,\n                variant: \"top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"small\",\n                  children: [\"Price: \", price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"small\",\n                  children: [\"Bathrooms: \", baths]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"small\",\n                  children: [\"Bedrooms: \", beds]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"small\",\n                  children: [\"sqft: \", sqft]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"small\",\n                  children: [\"lot_size: \", lot_size]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-block btn-danger\",\n                  onClick: () => handleDeleteProperty(listing_id),\n                  children: \"Delete this Property!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, listing_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SavedProperties, \"LaKKJPzjE4vUxVRnB3K/kggL694=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = SavedProperties;\nexport default SavedProperties;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedProperties\");","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","GET_ME","useQuery","useMutation","REMOVE_PROPERTY","SAVE_PROPERTY","Auth","getSavedPropertyIds","removePropertyIds","SavedProperties","loading","data","removeProperty","userData","me","console","log","handleDeleteProperty","listing_id","token","loggedIn","getToken","variables","e","savedProperties","length","map","property","photo","address","price","baths","beds","sqft","lot_size"],"sources":["/Users/David/Desktop/bootcamp2/Project-3/client/src/pages/SavedProperties.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\r\nimport {GET_ME} from '../utils/queries';\r\nimport {useQuery, useMutation} from '@apollo/client';\r\nimport { REMOVE_PROPERTY, SAVE_PROPERTY } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\nimport { getSavedPropertyIds, removePropertyIds } from '../utils/localStorage';\r\n\r\nconst SavedProperties = () => {\r\n  const {loading, data} = useQuery(GET_ME);\r\n  const [removeProperty] = useMutation(REMOVE_PROPERTY); \r\n  const userData = data?.me || [];\r\n\r\n  //???????????\r\n  // const [savedPropertyIds, setSavedPropertyIds] = useState(getSavedPropertyIds());\r\n  // const [ saveProperty] = useMutation(SAVE_PROPERTY)\r\n  \r\n  console.log(userData, \"SSSSSSSSSS\")\r\n  // create function that accepts the propertie's mongo _id value as param and deletes the property from the database\r\n  const handleDeleteProperty = async (listing_id) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n    if (!token) return false;\r\n\r\n    try {\r\n      await removeProperty({\r\n        // variables: {listing_id}\r\n        variables: {listing_id}\r\n      })\r\n\r\n      //only triggers if the removeProperty mutation is successful\r\n      removePropertyIds(listing_id);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // if data isn't here yet, say so\r\n  if (loading) return <h2>LOADING RESULTS...</h2>\r\n\r\n  // return (\r\n  //   <>\r\n  //     <div fluid className='text-light bg-dark'>\r\n  //       <Container>\r\n  //         <h1>Viewing saved properties</h1>\r\n  //       </Container>\r\n  //     </div>\r\n  //     <Container>\r\n  //       <h2>\r\n  //         {userData.savedProperties.length\r\n  //           ? `Viewing ${userData.savedProperties.length} saved ${userData.savedProperties.length === 1 ? 'properties' : 'properties'}:`\r\n  //           : 'You have no saved properties!'}\r\n  //       </h2>\r\n  //       <div>\r\n  //         {userData.savedProperties.map((property) => {\r\n  //           return (\r\n              \r\n  //             <Card key={property.listing_id} border='dark'>\r\n  //               {property.image ? <Card.Img src={property.image} alt={`The cover for ${property.title}`} variant='top' /> : null}\r\n  //               <Card.Body>\r\n  //                 <Card.Title>{property.title}</Card.Title>\r\n  //                 <p className='small'>Authors: {property.authors}</p>\r\n  //                 <Card.Text>{property.description}</Card.Text>\r\n  //                 <Button className='btn-block btn-danger' onClick={() => handleDeleteProperty(property.listing_id)}>\r\n  //                   Delete this Property!\r\n  //                 </Button>\r\n  //               </Card.Body>\r\n  //             </Card>\r\n  //           );\r\n  //         })}\r\n  //       </div>\r\n  //     </Container>\r\n  //   </>\r\n  // );\r\n\r\n// };\r\n  return (\r\n    <>\r\n      <div fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing saved properties</h1>\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedProperties.length\r\n            ? `Viewing ${userData.savedProperties.length} saved ${userData.savedProperties.length === 1 ? 'properties' : 'properties'}:`\r\n            : 'You have no saved properties!'}\r\n        </h2>\r\n        <div>\r\n          {userData.savedProperties.map((property) => {\r\n            return (\r\n              <div className=\"container\">\r\n                  <Card key={listing_id} border='dark'>\r\n                  {photo ? (\r\n                    <Card.Img src={photo}  variant='top' />\r\n                  ) : null}\r\n                  <Card.Body>\r\n                    <Card.Title>{address}</Card.Title>\r\n                    <p className='small'>Price: {price}</p>\r\n                    <p className='small'>Bathrooms: {baths}</p>\r\n                    <p className='small'>Bedrooms: {beds}</p>\r\n                    <p className='small'>sqft: {sqft}</p>\r\n                    <p className='small'>lot_size: {lot_size}</p>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteProperty(listing_id)}>\r\n                    Delete this Property!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedProperties;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/David/Desktop/bootcamp2/Project-3/client/src/pages/SavedProperties.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { GET_ME } from '../utils/queries';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { REMOVE_PROPERTY } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport { removePropertyId } from '../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SavedProperties = () => {\n  _s();\n\n  const {\n    loading,\n    data\n  } = useQuery(GET_ME);\n  const [removeProperty] = useMutation(REMOVE_PROPERTY); //!!!!!!!!!!!!!\n\n  const userData = (data === null || data === void 0 ? void 0 : data.me) || [];\n  console.log(userData, \"SSSSSSSSSS\"); // create function that accepts the propertie's mongo _id value as param and deletes the property from the database\n\n  const handleDeleteProperty = async propertyId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) return false;\n\n    try {\n      await removeProperty({\n        variables: {\n          propertyId\n        }\n      }); //only triggers if the removeProperty mutation is successful\n\n      removePropertyId(propertyId);\n    } catch (e) {\n      console.log(e);\n    }\n  }; // if data isn't here yet, say so\n\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"LOADING RESULTS...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved properties\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.savedProperties.length ? `Viewing ${userData.savedProperties.length} saved ${userData.savedProperties.length === 1 ? 'properties' : 'properties'}:` : 'You have no saved properties!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: userData.savedProperties.map(property => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [property.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: property.image,\n              alt: `The cover for ${property.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 35\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: property.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", property.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: property.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteProperty(property.propertyId),\n                children: \"Delete this Property!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, property.propertyId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SavedProperties, \"LaKKJPzjE4vUxVRnB3K/kggL694=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = SavedProperties;\nexport default SavedProperties;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedProperties\");","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","GET_ME","useQuery","useMutation","REMOVE_PROPERTY","Auth","removePropertyId","SavedProperties","loading","data","removeProperty","userData","me","console","log","handleDeleteProperty","propertyId","token","loggedIn","getToken","variables","e","savedProperties","length","map","property","image","title","authors","description"],"sources":["/Users/David/Desktop/bootcamp2/Project-3/client/src/pages/SavedProperties.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\r\nimport {GET_ME} from '../utils/queries';\r\nimport {useQuery, useMutation} from '@apollo/client';\r\nimport { REMOVE_PROPERTY } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\nimport { removePropertyId } from '../utils/localStorage';\r\n\r\nconst SavedProperties = () => {\r\n  const {loading, data} = useQuery(GET_ME);\r\n  const [removeProperty] = useMutation(REMOVE_PROPERTY); //!!!!!!!!!!!!!\r\n  const userData = data?.me || [];\r\n  \r\n  console.log(userData, \"SSSSSSSSSS\")\r\n  // create function that accepts the propertie's mongo _id value as param and deletes the property from the database\r\n  const handleDeleteProperty = async (propertyId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n    if (!token) return false;\r\n\r\n    try {\r\n      await removeProperty({\r\n        variables: {propertyId}\r\n      })\r\n\r\n      //only triggers if the removeProperty mutation is successful\r\n      removePropertyId(propertyId);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // if data isn't here yet, say so\r\n  if (loading) return <h2>LOADING RESULTS...</h2>\r\n\r\n  return (\r\n    <>\r\n      <div fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing saved properties</h1>\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedProperties.length\r\n            ? `Viewing ${userData.savedProperties.length} saved ${userData.savedProperties.length === 1 ? 'properties' : 'properties'}:`\r\n            : 'You have no saved properties!'}\r\n        </h2>\r\n        <div>\r\n          {userData.savedProperties.map((property) => {\r\n            return (\r\n              <Card key={property.propertyId} border='dark'>\r\n                {property.image ? <Card.Img src={property.image} alt={`The cover for ${property.title}`} variant='top' /> : null}\r\n                <Card.Body>\r\n                  <Card.Title>{property.title}</Card.Title>\r\n                  <p className='small'>Authors: {property.authors}</p>\r\n                  <Card.Text>{property.description}</Card.Text>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteProperty(property.propertyId)}>\r\n                    Delete this Property!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedProperties;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,WAA/B,EAA4CC,IAA5C,EAAkDC,MAAlD,QAAgE,iBAAhE;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,gBAApC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAC5B,MAAM;IAACC,OAAD;IAAUC;EAAV,IAAkBP,QAAQ,CAACD,MAAD,CAAhC;EACA,MAAM,CAACS,cAAD,IAAmBP,WAAW,CAACC,eAAD,CAApC,CAF4B,CAE2B;;EACvD,MAAMO,QAAQ,GAAG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,EAAN,KAAY,EAA7B;EAEAC,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsB,YAAtB,EAL4B,CAM5B;;EACA,MAAMI,oBAAoB,GAAG,MAAOC,UAAP,IAAsB;IACjD,MAAMC,KAAK,GAAGZ,IAAI,CAACa,QAAL,KAAkBb,IAAI,CAACc,QAAL,EAAlB,GAAoC,IAAlD;IACA,IAAI,CAACF,KAAL,EAAY,OAAO,KAAP;;IAEZ,IAAI;MACF,MAAMP,cAAc,CAAC;QACnBU,SAAS,EAAE;UAACJ;QAAD;MADQ,CAAD,CAApB,CADE,CAKF;;MACAV,gBAAgB,CAACU,UAAD,CAAhB;IACD,CAPD,CAOE,OAAOK,CAAP,EAAU;MACVR,OAAO,CAACC,GAAR,CAAYO,CAAZ;IACD;EACF,CAdD,CAP4B,CAuB5B;;;EACA,IAAIb,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAEb,oBACE;IAAA,wBACE;MAAK,KAAK,MAAV;MAAW,SAAS,EAAC,oBAArB;MAAA,uBACE,QAAC,SAAD;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME,QAAC,SAAD;MAAA,wBACE;QAAA,UACGG,QAAQ,CAACW,eAAT,CAAyBC,MAAzB,GACI,WAAUZ,QAAQ,CAACW,eAAT,CAAyBC,MAAO,UAASZ,QAAQ,CAACW,eAAT,CAAyBC,MAAzB,KAAoC,CAApC,GAAwC,YAAxC,GAAuD,YAAa,GAD3H,GAEG;MAHN;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAA,UACGZ,QAAQ,CAACW,eAAT,CAAyBE,GAAzB,CAA8BC,QAAD,IAAc;UAC1C,oBACE,QAAC,IAAD;YAAgC,MAAM,EAAC,MAAvC;YAAA,WACGA,QAAQ,CAACC,KAAT,gBAAiB,QAAC,IAAD,CAAM,GAAN;cAAU,GAAG,EAAED,QAAQ,CAACC,KAAxB;cAA+B,GAAG,EAAG,iBAAgBD,QAAQ,CAACE,KAAM,EAApE;cAAuE,OAAO,EAAC;YAA/E;cAAA;cAAA;cAAA;YAAA,QAAjB,GAA2G,IAD9G,eAEE,QAAC,IAAD,CAAM,IAAN;cAAA,wBACE,QAAC,IAAD,CAAM,KAAN;gBAAA,UAAaF,QAAQ,CAACE;cAAtB;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAG,SAAS,EAAC,OAAb;gBAAA,wBAA+BF,QAAQ,CAACG,OAAxC;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAGE,QAAC,IAAD,CAAM,IAAN;gBAAA,UAAYH,QAAQ,CAACI;cAArB;gBAAA;gBAAA;gBAAA;cAAA,QAHF,eAIE,QAAC,MAAD;gBAAQ,SAAS,EAAC,sBAAlB;gBAAyC,OAAO,EAAE,MAAMd,oBAAoB,CAACU,QAAQ,CAACT,UAAV,CAA5E;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAJF;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA,GAAWS,QAAQ,CAACT,UAApB;YAAA;YAAA;YAAA;UAAA,QADF;QAaD,CAdA;MADH;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA,gBADF;AAiCD,CA3DD;;GAAMT,e;UACoBL,Q,EACCC,W;;;KAFrBI,e;AA6DN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}